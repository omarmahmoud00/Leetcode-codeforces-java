class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        int sizeN = nums1.length;
        int sizeM = nums2.length;
        Arrays.sort(nums2);  
        ArrayList<Integer> intersectionArray = new ArrayList<>();

        for (int i = 0; i < sizeN; i++) {
            int result = checkForIntersection(nums2, nums1[i], sizeM);
            if (result != -1 && !intersectionArray.contains(nums1[i])) {
                intersectionArray.add(nums1[i]);
            }
        }

        int[] resultArray = new int[intersectionArray.size()];
        for (int i = 0; i < intersectionArray.size(); i++) {
            resultArray[i] = intersectionArray.get(i);
        }

        return resultArray;
    }

    private int checkForIntersection(int[] array, int num, int size) {
        int start = 0;
        int end = size - 1;

        while (start <= end) {
            int middle = start + (end - start) / 2;

            if (array[middle] == num) return num;
            if (array[middle] > num) {
                end = middle - 1;
            } else {
                start = middle + 1;
            }
        }

        return -1;
    }
}
